---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.svelte";
import GraphicsContainer from "../components/GraphicsContainer.svelte";
import Final from "../components/Final.svelte";
import Detalles from "../components/Detalles.svelte";
import Logo from "../components/Logo.svelte";
import Recomendacion from "../components/Recomendacion.svelte";
---

<Layout>
  <Header client:idle />
  <main class="relative h-screen flex flex-col">
    <div class="h-1/12 grid place-items-center relative mx-5">
      <!-- Botón -->
      <div class="absolute left-0">
        <a
          href="/dashboard"
          id="choose-another-image"
          class="inline-flex items-center gap-2 px-3 py-2 rounded-xl bg-white/75 text-black
                     hover:bg-transparent hover:text-white/75 transition-all duration-200
                     border hover:border-white/75 font-medium shadow-lg hover:shadow-xl"
        >
          <svg
            class="w-4 h-4"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M15 19l-7-7 7-7"></path>
          </svg>
          Elegir otra imagen
        </a>
      </div>
      <h1 class="text-4xl font-bold text-white/75">
        Resultados del Análisis <span
          class="bg-gradient-to-r from-[#5F0672] to-[#4100E0] bg-clip-text text-transparent"
        >
          Yape
        </span>
      </h1>
    </div>

    <div class="w-full h-full relative p-5">
      <div class="grid grid-cols-3 w-full h-full relative">
        <!-- Columna 1: Gráficos manejados por Svelte -->
        <GraphicsContainer client:load />

        <!-- Columna 2: Imagen -->
        <div class="relative w-full max-h-fit flex flex-col justify-between items-center gap-5 scale-90">
          <div
            class=" flex items-center justify-center w-full max-h-[400px]"
          >
            <div class="relative">
              <div
                id="image-placeholder"
                class="flex items-center justify-center min-w-[250px] min-h-[300px]"
              >
                <div class="text-center">
                  <svg
                    class="w-12 h-12 text-gray-400 mx-auto mb-3 animate-pulse"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
                    ></path>
                  </svg>
                  <p class="text-gray-400 text-sm">Cargando imagen...</p>
                </div>
              </div>

              <!-- Imagen -->
              <img
                id="analyzed-image"
                alt="Imagen analizada"
                class="max-w-sm max-h-80 object-contain rounded-lg hidden shadow-lg transition-all duration-300 hover:shadow-2xl brightness-90"
              />
            </div>
          </div>

          <!-- Recomendación -->
          <Recomendacion client:idle />
        </div>

        <!-- Columna 3: Análisis Final -->
        <div
          class="h-full flex flex-col items-center justify-between overflow-hidden"
        >
          <div class="grid grid-cols-2 gap-4">
            <!-- Fila superior -->
            <Final client:load />
            <Detalles client:load />
            <!-- Fila inferior centrada ocupando ambas columnas -->
            <div class="col-span-2">
              <Logo client:load />
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const uploadedImage = sessionStorage.getItem("uploadedImage");
    const imageElement = document.getElementById("analyzed-image");
    const placeholder = document.getElementById("image-placeholder");

    if (uploadedImage && imageElement) {
      (imageElement as HTMLImageElement).src = uploadedImage;
      imageElement.onload = () => {
        imageElement.classList.remove("hidden");
        if (placeholder) {
          placeholder.style.display = "none";
        }
      };

      imageElement.onerror = () => {
        console.error("Error al cargar la imagen");
        if (placeholder) {
          placeholder.innerHTML = `
            <div class="text-center text-red-400">
              <svg class="w-12 h-12 mx-auto mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <p class="text-sm">Error al cargar la imagen</p>
            </div>
          `;
        }
      };
    }

    // Limpiar porcentajes del sessionStorage al elegir otra imagen
    const chooseBtn = document.getElementById("choose-another-image");
    if (chooseBtn) {
      chooseBtn.addEventListener("click", function () {
        sessionStorage.removeItem("porcentajePixeles");
        sessionStorage.removeItem("porcentajeRuido");
        sessionStorage.removeItem("porcentajeHistograma");
        sessionStorage.removeItem("porcentajeSSIM");
        sessionStorage.removeItem("filtrosPorcentajes");
      });
    }
  });
</script>
